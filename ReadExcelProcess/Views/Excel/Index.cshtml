@{
    ViewData["Title"] = "Import File";
}

<!-- Toast Container -->
<div class="position-fixed top-0 end-0 p-3" style="z-index: 1050">
    <div id="toastContainer" class="toast align-items-center bg-danger border-0" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body" style="color: #fff" id="toastMessage"></div>
            <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
</div>


<div class="container mt-5">
    <div class="row d-flex align-items-center justify-content-center">
        <!-- Left Side: File Upload -->
        <div class="col-md-5 d-flex flex-column align-items-center">
            <h2 class="text-center mb-4">Upload File</h2>
            <form id="uploadForm" enctype="multipart/form-data" class="w-100">
                <div class="mb-3">
                    <label for="fileInput" class="form-label">Choose File</label>
                    <input class="form-control" type="file" id="fileInput" name="file" required>
                </div>
                <div class="d-flex gap-1 w-100">
                    <button type="submit" class="btn btn-primary flex-grow-1">Upload</button>
                    <button type="button" class="btn btn-secondary flex-grow-1" id="btnCancel">Hủy</button>
                </div>
            </form>
        </div>

        <!-- Right Side: Uploaded File Details -->
        <div class="col-md-5 d-flex flex-column align-items-center">
            <h2 class="text-center mb-4">Uploaded File</h2>
            <div id="fileInfo" class="border p-4 w-100 text-center">No file uploaded yet.</div>
        </div>
    </div>
</div>

<script>
    var systemURL = window.origin + "/";
</script>

<script>
    $(document).ready(function () {
        $("#uploadForm").submit(function (event) {
            event.preventDefault();

            var formData = new FormData();
            var fileInput = $("#fileInput")[0].files[0];

            if (!validateFile(fileInput)) {
                return;
            }

            if (!fileInput) {
                alert("Please select a file to upload.");
                return;
            }

            formData.append("file", fileInput);

            /* $.ajax({
                url: systemURL + "Excel/api/import", // Đảm bảo API đúng
                type: "POST",
                data: formData,
                contentType: false,
                processData: false,
                xhrFields: {
                    responseType: 'blob' // Nhận phản hồi dưới dạng file
                },
                success: function (blob, status, xhr) {
                // Lấy tên file từ header nếu có
                var filename = "Downloaded_Report.xlsx";
                var disposition = xhr.getResponseHeader("Content-Disposition");
                if (disposition && disposition.indexOf("attachment") !== -1) {
                    var matches = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/.exec(disposition);
                    if (matches != null && matches[1]) {
                        filename = matches[1].replace(/['"]/g, '');
                    }
                }

                var url = window.URL.createObjectURL(blob);
                clearForm();
                showToast("Tải lên thành công!", "success");
                // Hiển thị tên file và link tải
                $("#fileInfo").html(`
                    <p class="text-success">
                        File uploaded successfully. <br>
                        <a href="${url}" download="${filename}" id="downloadLink">${filename}</a>
                    </p>
                `);
            },
                error: function (xhr, status, error) {
                    $("#fileInfo").html(`<p class='text-danger'>Error uploading file.</p>`);
                }
            }); */

            $.ajax({
                url: systemURL + "Excel/api/generate-travel-time-matrix",
                type: "POST",
                data: formData,
                contentType: false,
                processData: false,
                xhrFields: {
                    responseType: 'blob' // Nhận phản hồi dưới dạng file
                },
                success: function (blob, status, xhr) {
                    var apiFileName = xhr.getResponseHeader("X-File-Name");
                    var finalFileName = apiFileName ? `Matrix${apiFileName}` : "Matrix_Report.xlsx"; // Thêm "Matrix" vào tên file từ API

                    var url = window.URL.createObjectURL(blob);
                    clearForm();
                    showToast("Tải lên thành công!", "success");

                    $("#fileInfo").html(`
                        <p class="text-success">
                            File uploaded successfully. <br>
                            <a href="${url}" download="${finalFileName}" id="downloadLink">${finalFileName}</a>
                        </p>
                    `);
                },
                error: function (xhr, status, error) {
                    $("#fileInfo").html(`<p class='text-danger'>Error uploading file.</p>`);
                }
            });

        });
    });

     $("#btnCancel").click(function () {
        clearForm();
            showToast("Đã hủy chọn file!", "warning");
    });

    // Hàm xóa form
    function clearForm() {
        $("#fileInput").val(""); // Xóa file đã chọn
    }

    function validateFile(file) {
            if (!file) {
                showToast("Vui lòng chọn một tệp!", "danger");
                return false;
            }
            if (!file.name.endsWith(".xlsx")) {
                showToast("Chỉ chấp nhận tệp .xlsx!", "danger");
                return false;
            }
            return true;
        }

     function showToast(message, type) {
        var toast = $("#toastContainer");
        $("#toastMessage").text(message);

        // Xóa class màu cũ và thêm class mới
        toast.removeClass("bg-success bg-danger bg-warning").addClass("bg-" + type);

        var bsToast = new bootstrap.Toast(toast[0]);
        bsToast.show();
    }

</script>
